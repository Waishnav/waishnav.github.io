---
import type { CollectionEntry } from "astro:content";
import { compareBlogEntriesByPubDate } from "../utils";
import Link from "./Link.astro";
import FormattedDate from "./FormattedDate.astro";
import FormattedTags from "./FormattedTags.astro";

interface Props {
  posts: CollectionEntry<"blog">[];
  recentOnly?: boolean;
}

const { posts, recentOnly } = Astro.props;
---

<ul class="grid mt-4 gap-y-6">
  {
    posts
      .sort(compareBlogEntriesByPubDate)
      .slice(0, recentOnly ? 5 : undefined)
      .map((post) => (
        <li class="block">
          <a href={`/blog/${post.slug}/`}>
            <h4 class="text-xl font-bold hover:underline hover:text-blue-400">
              {post.data.title}
            </h4>
          </a>
          <FormattedDate date={post.data.pubDate} />
          {
            !recentOnly && (
              <FormattedTags
                tags={post.data.tags}
                cutoff={recentOnly ? 2 : undefined}
              />
            )}
        </li>
        <hr class="border-t border-gray-200" />
      ))
  }
  {
    recentOnly && (
      <li>
        <Link href="/blog" class="hover:text-blue-400 hover:underline">
          Read more...
        </Link>
      </li>
    )
  }
</ul>
